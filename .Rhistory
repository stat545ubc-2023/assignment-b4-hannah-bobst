knitr::opts_chunk$set(echo = TRUE)
```{r message=FALSE}
# Load packages
library(tidyverse)
# Load packages
library(tidyverse)
library(janeaustenr)
library(stopwords)
# Create lowercase subset of "emma" data set without stop punctuation and blank entries
emma_subset <- emma %>%
str_split(pattern=" ") %>%
unlist() %>%
tolower() %>%
str_subset(pattern="") %>%
str_remove_all(pattern="[.:;,?()_!]") %>%
str_remove_all(pattern="\"") %>%
str_remove_all(pattern="--")
# Subset "emma" further without stopwords (from "stopwords" package)
emma_subset <- emma_subset[(emma_subset %in% stopwords()) == FALSE]
# Make "emma_subset" into a data frame
emma_subset_df <- as.data.frame(words = emma_subset)
# Make "emma_subset" into a data frame
emma_subset_df <- as.data.frame("words" = emma_subset)
# Make "emma_subset" into a data frame
emma_subset_df <- data.frame("words" = emma_subset)
emma_subset_df
emma_counts <- emma_subset_df %>%
summarize("counts" = n())
emma_counts
emma_counts <- emma_subset_df %>%
group_by(words) %>%
summarize("counts" = n())
emma_counts
emma_counts
emma_counts <- emma_subset_df %>%
group_by(words) %>%
summarize("counts" = n()) %>%
order(counts)
emma_counts <- emma_subset_df %>%
group_by(words) %>%
summarize("counts" = n()) %>%
order("counts")
emma_counts <- emma_subset_df %>%
group_by(words) %>%
summarize("counts" = n()) %>%
arrange(counts)
emma_counts
unique(emma_subset_df$words)
emma_counts <- emma_subset_df %>%
count(words)
emma_counts
emma_subset <- emma %>%
str_split(pattern=" ") %>%
unlist() %>%
tolower() %>%
str_subset(pattern="") %>%
str_remove_all(pattern="[.:;,?()_!&]") %>%
str_remove_all(pattern="\"") %>%
str_remove_all(pattern="--")
emma_subset <- emma_subset[(emma_subset %in% stopwords()) == FALSE]
# Make "emma_subset" into a data frame
emma_subset_df <- data.frame("words" = emma_subset)
# Summarize counts of words
emma_counts <- emma_subset_df %>%
count(words)
emma_counts
emma_counts <- emma_subset_df %>%
count(words) %>%
arrange(n)
emma_counts
emma_counts <- emma_subset_df %>%
count(words) %>%
arrange(desc(n))
emma_counts
# Select the 20 most common words for plotting
emma_counts_20 <- emma_counts[1:20]
# Select the 20 most common words for plotting
emma_counts_20 <- emma_counts
emma_counts_20 <- emma_counts[1:20,]
emma_counts_20
emma_counts_20 %>%
ggplot(aes(x = words, y = n, fill = words)) +
geom_bar()
emma_counts_20 %>%
ggplot(aes(x = words, y = n, fill = words)) +
geom_col()
emma_counts_20 %>%
ggplot(aes(x = words, y = n)) +
geom_col()
# Make counts a factor
emma_counts_20$n <- as.factor(emma_counts_20$n)
emma_counts_20 %>%
ggplot(aes(x = words, y = n)) +
geom_col()
emma_counts_20
emma_counts_20 %>%
ggplot(aes(x = words, y = n)) +
geom_col() +
coord_flip()
emma_counts_20 %>%
ggplot(aes(x = words, y = n, fill=words)) +
geom_col() +
coord_flip()
emma_counts_20 %>%
ggplot(aes(x = words, y = n, fill=words)) +
geom_col() +
coord_flip() +
guides(fill = FALSE)
emma_counts_20 %>%
ggplot(aes(x = words, y = n, fill=words)) +
geom_col() +
coord_flip() +
guides(fill = "none")
emma_counts_20 %>%
ggplot(aes(x = words, y = n, fill=words)) +
geom_col() +
coord_flip() +
guides(fill = "none")
emma_counts_20 %>%
ggplot(aes(x = reorder(words, -n), y = n, fill=words)) +
geom_col() +
coord_flip() +
guides(fill = "none")
# Select the 20 most common words for plotting
emma_counts_20 <- emma_counts[1:20,]
emma_counts_20 %>%
ggplot(aes(x = reorder(words, -n), y = n, fill=words)) +
geom_col() +
coord_flip() +
guides(fill = "none")
emma_counts_20 %>%
ggplot(aes(x = reorder(words, -n), y = n)) +
geom_col() +
coord_flip() +
guides(fill = "none")
emma_counts_20 %>%
ggplot(aes(x = reorder(words, -n), y = n)) +
geom_col(fill = "blue") +
coord_flip() +
guides(fill = "none")
emma_counts_20 %>%
ggplot(aes(x = reorder(words, -n), y = n)) +
geom_col(fill = "#f68060") +
coord_flip() +
guides(fill = "none")
emma_counts_20 %>%
ggplot(aes(x = reorder(words, -n), y = n)) +
geom_col(fill = "darksalmon") +
coord_flip() +
guides(fill = "none")
emma_counts_20$words <- as.factor(emma_counts_20$words)
emma_counts_20 %>%
ggplot(aes(x = reorder(words, -n), y = n)) +
geom_col(fill = "darksalmon") +
coord_flip() +
guides(fill = "none")
emma_counts_20$words <- desc(as.factor(emma_counts_20$words))
emma_counts_20 %>%
ggplot(aes(x = reorder(words, -n), y = n)) +
geom_col(fill = "darksalmon") +
coord_flip() +
guides(fill = "none")
emma_counts_20$words <- as.factor(emma_counts_20$words)
# Plot the 20 most common words
emma_counts_20 %>%
ggplot(aes(x = reorder(words, -n), y = n)) +
geom_col(fill = "darksalmon") +
coord_flip() +
guides(fill = "none")
# Select the 20 most common words for plotting
emma_counts_20 <- emma_counts[1:20,]
emma_counts_20 %>%
ggplot(aes(x = reorder(words, -n), y = n)) +
geom_col(fill = "darksalmon") +
coord_flip() +
guides(fill = "none")
emma_counts_20 %>%
ggplot(aes(x = reorder(words, n), y = n)) +
geom_col(fill = "darksalmon") +
coord_flip() +
guides(fill = "none")
emma_counts_20 %>%
ggplot(aes(x = reorder(words, n), y = n)) +
geom_col(fill = "darksalmon") +
coord_flip() +
guides(fill = "none") +
geom_text(size = 3, position = position_stack(vjust = 0.5))
emma_counts_20 %>%
ggplot(aes(x = reorder(words, n), y = n)) +
geom_col(fill = "darksalmon") +
coord_flip() +
guides(fill = "none")
emma_counts_20 %>%
ggplot(aes(x = reorder(words, n), y = n)) +
geom_col(fill = "darksalmon") +
coord_flip() +
guides(fill = "none") +
geom_text(aes(label=n))
emma_counts_20 %>%
ggplot(aes(x = reorder(words, n), y = n)) +
geom_col(fill = "darksalmon") +
coord_flip() +
guides(fill = "none") +
geom_text(aes(label=n), position = position_stack(vjust = 0.5))
emma_counts_20 %>%
ggplot(aes(x = reorder(words, n), y = n)) +
geom_col(fill = "darksalmon") +
coord_flip() +
guides(fill = "none") +
geom_text(aes(label=n), hjust = 1.2)
emma_counts_20 %>%
ggplot(aes(x = reorder(words, n), y = n)) +
geom_col(fill = "darksalmon") +
coord_flip() +
guides(fill = "none") +
geom_text(aes(label=n), hjust = 1.2, colour="white")
emma_counts_20 %>%
ggplot(aes(x = reorder(words, n), y = n)) +
geom_col(fill = "darksalmon") +
coord_flip() +
guides(fill = "none") +
geom_text(aes(label=n), hjust = 1.2, colour="white") +
ggtitle("20 Most Common Words in Emma") +
xlab("Word Count") +
ylab("Words")
emma_counts_20 %>%
ggplot(aes(x = reorder(words, n), y = n)) +
geom_col(fill = "darksalmon") +
coord_flip() +
guides(fill = "none") +
geom_text(aes(label=n), hjust = 1.2, colour="white") +
ggtitle("20 Most Common Words in Emma") +
xlab("Words") +
ylab("Word Count")
knitr::opts_chunk$set(echo = TRUE)
# Load packages
library(tidyverse)
library(janeaustenr)
library(stopwords)
# Create lowercase subset of "emma" data set without stop punctuation and blank entries
emma_subset <- emma %>%
str_split(pattern=" ") %>%
unlist() %>%
tolower() %>%
str_subset(pattern="") %>%
str_remove_all(pattern="[.:;,?()_!&]") %>%
str_remove_all(pattern="\"") %>%
str_remove_all(pattern="--")
# Subset "emma" further without stopwords (from "stopwords" package)
emma_subset <- emma_subset[(emma_subset %in% stopwords()) == FALSE]
# Make "emma_subset" into a data frame
emma_subset_df <- data.frame("words" = emma_subset)
# Summarize counts of words and order largest to smallest
emma_counts <- emma_subset_df %>%
count(words) %>%
arrange(desc(n))
# Select the 20 most common words for plotting
emma_counts_20 <- emma_counts[1:20,]
# Plot the 20 most common words
emma_counts_20 %>%
ggplot(aes(x = reorder(words, n), y = n)) +
geom_col(fill = "darksalmon") +
coord_flip() +
guides(fill = "none") +
geom_text(aes(label=n), hjust = 1.2, colour="white") +
ggtitle("20 Most Common Words in Emma") +
xlab("Words") +
ylab("Word Count")
is.character(c("a", "b", "c"))
is.vector(c("a", "b", "c"))
is.character(c(1,2,3))
is.character(c(1,"a","b"))
c(1,"a", "b")
words
str_detect(words,[aeiouAEIOU])
str_detect(words,pattern=[aeiouAEIOU])
str_detect(words,pattern="[aeiouAEIOU]")
str_view(words, pattern="[aeiouAEIOU]")
words %>%
str_split(pattern="[aeiouAEIOU]")
words[1:3] %>%
str_split(pattern="[aeiouAEIOU]")
str_sub(words, end=1)
str_sub(words, end=-1)
words[-1]
str_sub(words[1:10], start=-1, end=-1)
detect(words[1:10], [aeiouAEIOU])
detect(words[1:10], "[aeiouAEIOU]")
is_vowel <- function(x) x %in% c("a", "e", "i", "o", "u", "A", "E", "I", "O", "U")
is_vowel("a")
is_vowel("A")
is_vowel("p")
detect(words[1:10], is_vowel)
detect_index(words[1:10], is_vowel)
map(words[1:10], function(x) detect_index(x, is_vowel))
data_letters <- str_split(words[1:10], "")
data_letters
detect_index(data_letters, is_vowel)
#detect_index(data_letters, is_vowel)
map(data_letters, function(x) detect_index(x, is_vowel))
#detect_index(data_letters, is_vowel)
map(data_letters, function(x) detect_index(x, is_vowel, .dir="backward"))
last_vowel_index <- map_vec(data_letters, function(x) detect_index(x, is_vowel, .dir="backward"))
last_vowel_index
# Split words at final vowel
str_sub(words[1:10], start=last_vowel_index)
# Split words at final vowel
str_sub(words[1:10], end=last_vowel_index)
# Split words at final vowel
str_sub(words[1:10], end=last_vowel_index-1)
str_c(str_sub(words[1:10], end=last_vowel_index),str_sub(words[1:10], end=last_vowel_index-1))
str_c(str_sub(words[1:10], start=last_vowel_index),str_sub(words[1:10], end=last_vowel_index-1))
is_consanant <- function(x) x %in% !c("a", "e", "i", "o", "u", "A", "E", "I", "O", "U")
is_consanant("a")
is_consanant <- function(x) !(x %in% c("a", "e", "i", "o", "u", "A", "E", "I", "O", "U"))
is_consanant("a")
"F"
is_consanant("x")
last_con_index <- map_vec(data_letters, function(x) detect_index(x, is_consanant, .dir="backward"))
last_con_index
last_vowel_index
